> 个人认为当前比较“**有价值**”的一些前沿方向。
> 
> 所谓“有价值”，预先排除了以 深度学习/神经网络 为核心的 CV / NLP，同时保留了以 机器学习 为核心的 DA（DataAnalysis），仅个人意见。
> 
> 基本划分为：学界（更偏向于学术研究活动）、商界（更偏向于商业活动）、交叉（多领域）

# 学界

## 软件分析/软件测试

#### 基本情况

​    这一领域基本上就是学术研究，是ISCAS广泛涉及的一个方向。

​    个人不是特别感兴趣，且软件分析这个方向应该是 **企业应用不多**，做这个方向可能是准备之后继续做学术。

#### 工作内容

​    一个非常主要的方向就是 ` Bug Detection `，即分析软件并找出其中的` 缺陷 `。

​    这里的缺陷又包括：

- Crash：程序崩溃；
- Race：数据竞争，程序的串行化问题；
- DeadLock：死锁，并发体的死锁问题；

## 分布式计算

​    个人理解，分布式计算的主要工作包括：

- 做一个Spark之类的计算框架，或者去完善它；

- 利用Spark这样一个计算框架去解决实际问题；

## 分布式存储

​    个人理解，分布式存储的主要工作包括：

- 做一个GFS之类的存储系统（分布式文件系统）；
- 做一个ZK之类的分布式配置服务；

## 分布式网络

​    主要方向就是SDN

> 关于SDN的一点思考：
> 
> ​    SDN就是将**网络协议栈**从`固件编程`的层次提升到了`软件编程`的更高层次，从而脱离特定/专用硬件。
> 
> ​    原本以为软件模拟的网络协议栈应当上个世纪就有人做了，但是实际上是需要建设IDC时才体现出SDN的价值。

## 云原生/分布式操作系统

​    我个人认为当前（202X）最有发展前景的方向。

> 有趣的一点：从云原生反观语言的发展
> 
> Java，或者说jvm，是为了解决应用跨平台问题而提出来的。但在云原生下，是通过容器将运行环境打包和隔离，所以就不需要jvm对运行时环境进行进一步的抽象。如果容器技术出现在jvm之前，那还会有Java存在的可能吗？我承认会出现一门自带GC的语言（相较于cpp），合理推测其runtime是native + VM结合的，既非C++的pure native，也非JVM的pure VM。可以参考Golang之于C。

## 边缘计算

#### CDN: From content-distributed-network To calculation-distributed-network

​    CDN是最成功的云服务，大量售卖且完整解决客户问题，CDN售卖杀价是商业套路，研究不出新花样更证明其完美。某些浅薄的人嘲讽CDN的逻辑，有点像嘲笑胡萝卜没有大蒜的味道。

​    **边缘网络+边缘IaaS算力+**网站服务，这就是CDN；把网站服务换成视频服务，这就是点直播；如果把应用层换成**通用边缘计算框架**，再通过5G把**延迟降低到10ms以下**，这就是边缘计算。

​    边缘计算现在只做IaaS资源和容器云就够消化三年市场红利，将来会出现（除了CDN之外）所有行业的PaaS边缘云。


## 机器学习

​    随着边缘计算的兴起，传统的机器学习有了更多建模方式。

​    之所以反感深度学习/神经网络，是因为一些算法、模型的可解释性、可理解性实在是太差了。但是相反，大部分传统的机器学习算法还是有其坚实的数学基础的，典型如贝叶斯理论及其相关算法。

​    所以，有人说“深度学习/神经网络是计算机里面的生化环材，发Paper是主要目的”。对此我持有激进态度。

### MLSys

​    这是目前在学术界比较火的一个方向，具体可以[参考](https://zhuanlan.zhihu.com/p/104444471)。

### 联邦学习

> ref： [什么是联邦学习 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/100688371)

​    联邦学习是一种典型的分布式机器学习。

​    从 样本记录和样本特征 两个方面可以划分出：横向联邦学习、纵向联邦学习和迁移机器学习。

# 交叉

## 数据工程

​    典型的业务场景包括：用户画像，

### 大数据平台

​    大数据平台开发，主要使用Hadoop等工具。

> 大数据或者更严格一点大数据系统开发，这个其实更数据库内核开发是差不多类型的。前者使用Java语言及其工具，后者往往是C++相关工具，但语言层面的区别只是表象。两者的核心都在于：查询优化，存储引擎，分布式技术，另外数据库相比于大数据额外的一点可能是事务的支持更加完善。
> 
> 分布式存储系统相比于大数据系统和数据库系统就是更底层一级的存在，这一层的存储是用来支撑数据库和大数据引擎的存储的。类比于单机操作系统，如果数据库是MySQL的话，存储系统就是操作系统文件系统。
> 
> 容器调度这种的话也是底层的一种系统了，他上层支撑的可能是大数据系统也可能是业务系统。仍然类比于单机操作系统，容器调度器就类似于内核中的进程调度器，只不过容器的调度资源是以容器为单位的。

> 不同赛道的比较（**大数据 与 云原生**）：
> 
> 大数据系统相对来说跟业务结合更紧密，在这个赛道上既可以做基础架构，比如某个引擎的开发，也可以去做一些业务支持。做基础架构类工作的话本质就是 **数据库系统、分布式系统此类理论的实践**；做业务类工作的话，既涉及到用户需求也涉及到性能调优。
> 
> 存储系统和调度系统这类的话就是纯粹的基础架构了，基本不太可能跟业务产生直接联系。可能只会在云厂商或者大公司的基础架构部门才有。比如阿里云的盘古就是存储系统，当然阿里也有资源调度类的产品。

# 商界

​    商界主要进行的是，以计算机技术为基础、以用户体验为导向、以经济利益为核心的商业活动。

### 传统互联网

​    传统互联网所涵盖的场景：

- O2O
- P2P

​    我过去只是懂计算机，但并不懂互联网的一些规则、规律。

​    因为互联网产业是计算机和商业结合的特定产物，我对于商业这一块没有任何知识积累的。

## 金融科技

​    计算机+金融。

### 量化投资

### 高频交易

## 自动驾驶

​    随着自动技术的落地，现在这一领域更多是在切分市场。

## 医药科技

​    计算机+医药。

## 区块链 & Web3.0

> ref：比较带有批判性观点的文章： [是时候戳戳 Web 3.0 的神话了 (qq.com)](https://mp.weixin.qq.com/s/FL7NHQ8R9hrHFLeEktyy5w)。
> 
> 当然也有人说这篇文章本身是在扯淡。

​    **核心观点：**

​    从商业化的角度审视Web3.0所谓的“去中心化”，可用得出一个结论：

​    尽管很多 Web3 的参与者抱着美好的愿望，希望创造一个全新的去中心化互联网，但很遗憾，不管多么努力，最终的结局一定是走向**垄断**。
