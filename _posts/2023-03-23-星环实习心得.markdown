## 引言

**成功上岸**

    如果你自认为是一个“数据库从业者”、能“build real system”，那么现在就是“金榜提名时”。自从 2023-01-06 立志做数据库方向，现在只有这家公司认可了你的在数据库方面所作的努力。往日的努力、等待、焦虑在此时都体现了价值。

> 写点面试心得
> 
> 面了这么多，还是觉得白纸写算法的能力最重要。比如手写数据结构 vector、hashmap （这点可以归纳为做“模拟”的能力）。
> 
> 其次才是各种算法，比如搜索、动态规划。

> 说来也巧，写给四月一日的时光邮件开启时，我恰好在驶往虹桥的动车上。邮件里我猜想自己是在企业还是在校园，结果是在两者之间，这是愚人节收到的最好的“玩笑”。

**来之不易，且行且珍惜**

    受国内“互联网寒潮”影响，23年的实习并不好找，并且很多资源都倾斜于 23届毕业生。然后还是数据库这种细分领域，职位肯定就更少了，甚至于有些职位明确不招本科生。前段时间 PingCAP 还裁员 20%，标志着行业寒气。

    这粒“时代的灰尘”落到我身上，形成了一些大山：

- 技术栈上，会做 OLAP 相关（这也与读研方向契合），语言要转到 Java（C++ 转 Java 应该很容易吧）。

- 职位上，薪资也是大幅度缩水。只求不加班、不无效内卷。

   

## 现状

    我承认星环只是 数据库/大数据 领域的小厂，但确实小厂更能学到技术。

    ﻿周围都是搞数据库的专家，我应该向他们学习经验和技术。 我要努力融入到核心团队，学习核心技术。

    

#### 数据库行业

> [ref: 2022Q2 一份行业研判](https://www.zhihu.com/question/25458663/answer/2561454366)

    主流产品：OceanBase、PolarDB、GaussDB

#### 工作内容

    进来先写了一个月的 SQL 测试。基软其实大量的工作都在于**验证和测试**，研发新功能在整个工作流中其实占比很少。

    Linac 计算引擎继承了 DuckDB 的代码库，确实走了很多捷径。DuckDB 本身是一个内存计算引擎，类似于 Apache Arrow。Linac 通过 Protobuf 协议与 Inceptor 进行交互，FFI 这部分组件称为 Quark。

    Linac 存在的意义是用 C/C++ 重写大部分的 UDF。

> 所以要明白目前到底是在做一件什么事情，是在模仿 DuckDB 呢，还是在真正地做一个数据库。
> 
> 我希望能认清这一点，并且不希望一直在打杂。想要不打杂的话，就要主动要“事情”来做。

    到第三个月的时候，虽然还是做着杂活，但工作强度越来越上头。这是一种不断向外提供自身剩余价值的方式，**这样的投入和经验收获实际上是在损害我自身的利益。**

    ﻿看不到能力的增长，数据库方面的能力和刚来的时候其实差不多。只看到经验的增长。做的工作实际上和数据库关联不大，更像是在做一个数值计算库，只不过用的计算框架是基于数据库执行引擎的。

    面向不同的工作内容，写代码的工作其实算是底层劳动部分，简单来说就是大头兵。高级的工作要求你证明自己的学习力和创造力，这主要是追踪市场需求、为公司开拓赚钱的业务线。

    

#### 工作方法优化

**研发工作流当中的细节**

    一种普遍的研发流程：设计与实现分离，先设计后实现。设计期关注接口与建模，实现期关注数据结构与算法。

    学会拆分任务，将整体任务拆分为若干子任务。在进行下一阶段的任务前先提交上一阶段的任务，不断地积累正确性。

    一些软件开发的经验：对于抛出异常的处理；对于弱类型计算中溢出的处理。

    

#### 利益关系

    这里也给打工人提个醒，对那些早期团队都被洗光的创业公司，要格外谨慎。老人被洗的一个常见原因是——**不好忽悠**。创业初期的时候，大家不能说对创始人知根知底，但也了解个七七八八。大规模融资以后“继续艰苦奋斗”和“新买的法拉利”，这俩不兼容的事物怎么向这帮老人解释呢？

    

#### 同事关系

    **mean coworkers**. Most people here are mean, so **leave them alone**, don't let them to affect your life emotion, and never think about changing it.
    **A mean person** is someone who is unkind or cruel with the intention to put others down and make them fail. The first reason to make a person mean is the low self-esteem.

> https://www.lovepanky.com/my-life/reflections/cissexism
> 
> https://www.learning-mind.com/mean-person-traits/

    No need to defend from those, I should learn from those. I should know how to be cruel.

    

    这个世界是复杂的，你应该庆幸自己**尽可能早地认识到了这个世界的复杂性**，比如你看到leader的第一眼几乎就可以肯定这是个 bad girl，不过人本来就是亦正亦邪的。

    一个坏的办公环境是，**上级需要通过打压下级来维护自身的尊贵地位**。团队的工作氛围和领导的办事风格绝对是息息相关的。

    ﻿同事之间也确实没太多好聊的。不同人生阶段的人，谈论的话题存在明显的差异，这就是所谓的代沟。    

    搞技术的普遍沟通表达能力不太行，**缺少亲和力**。但这并不代表他们情商不行，反而擅长沟通表达的同事一般都是做市场营销的。

        

## 思考

    努力工作、产出成果实际上是在帮老板赚钱罢了，作为实习只有学到的知识、经验才是属于自己的。

    星环确实带给你的**成长不够、能力增长十分有限**。就像是人很难超越自身所处的时代，这个公司的环境确实也限制了你的成长空间。

    我觉得**这个世界上大部分人都没有信仰**，不知道自己努力的动机是什么。于他们而言，工作就仅仅只是为了那点工资。但是我的信仰是，推动科技进步改变世界。

    我在实习期间很焦虑，焦虑的来源是我手头的工作和我的信仰是不相符的。首先这说明我是有信仰的。然后我的信仰是什么？是走在计算机学科前沿，不断拓展这个前沿并为人类进步做贡献。

    《伤仲永》和《马说》实际上是在讲一个道理，只不过后者将怀才不遇的境遇和结果描述得更加露骨。

    **活好不如上车早**。

    其实关于什么是正确的工作，没有人能够预料。所以**应该分散风险，组合投资个人能力**，向能够灵活转行的方向转型发展。

    

### 反思 OLAP 产品

    半年之后回忆在星环做的 OLAP 相关工作：OLAP 产品实际效果（正确性、性能等方面）研发团队自己心里都没底，全靠产品对外吹，然后吸引热钱，再倒逼研发。
    于是研发只能不断应对线上问题，逐渐变成高级客服。这是从“能”逐渐转向“忍”，我不喜欢这样的生存方式。
    另一方面，其他小厂做产品（例如 DeepFlow）估计是**类似套路**。所以产品对外吹的特性，不要轻信全部就高质量地实现了。

    

# 附录

> 最后留档一下工作总结吧

    通过这段时间的实习，我对 Linac 执行引擎的工作原理、基本架构已经有了一定的了解。作为一个面向 OLAP 场景的数据库执行引擎，其上有大量工作可以做的。我的工作重心在于 UDF 的实现、测试和质量保证，包括对不同数据类型、不同函数、不同表达式或算子的研发。
    四月份刚到公司时，我们 Linac 的 UDF 支持还不够完备，很多 UDF 的正确性和漏洞也未得到充分验证。在这样的情况下，我的首要工作是对 UDF 和类型进行充分的测试，包括 UDF 以边界值作为参数、在不同的 SQL 语句位置（select、filter、join key、partition key 等）下的执行情况，并与 inceptor、oracle 等数据库的执行结果进行比较。对此，我一共发现了 20 余个问题，并形成 JIRA，其中已有 15 个已得到解决。
    在五月份，我开始处理 Linac 中单测对代码覆盖不够充分的问题，并重点关注字符串 UDF 和窗口函数算子的代码覆盖问题。这部分的单测因为逻辑复杂、涉及到的代码范围广，所以一直没有人来处理。对此，我实现了针对窗口函数算子的单元测试，已覆盖窗口函数算子执行逻辑的 90% 以上，同时将 Linac 的代码行数覆盖率从 59% 提升到了 63%。在这个月，我还处理了部分字符串 UDF 与 inceptor 执行结果不一致的问题，提升了 Linac 执行引擎的语法兼容性。
    在六月份，我的主要工作在于设计并实现 Interval 类型和相关 UDF 函数，这个需求来源于主流的数据库系统都支持了 Interval 类型。实现 Interval 这个新类型，和实现 Integer 类型的过程是类似的，需要依次完成 Interval 类型的存储、Interval 类型和 Datetime/Timestamp 类型的之间的计算、构造 Interval 类型的 UDF 等。这个过程使我能够从内部实现的角度，来理解数据库系统的类型系统的工作原理，对我的动手能力有很大的提升。
    总之，这几个月的工作加深了我对于软件系统工程的理解和认识，培养了我团队协作的意识和能力，这些都是实习带给我的宝贵经验。同时，我的工作也存在一些不足之处，包括对代码逻辑的思考不够充分、不够老练，有几次同事都指出我的代码中未对边界情况进行处理。所以，在每次提交代码之前，我都应该重新认真审查一遍新代码，做到自己对自己的代码负责、不依赖别人来帮我发现问题。
    在下一阶段，我将全面深化对 Linac 执行引擎的学习和研发过程，积极思考 Linac 中有哪些还值得改进和优化的地方，并和大家一起研讨。同时，为了进一步提升 Linac 的语法兼容性，我们还需要提供更多的 UDF 支持，这也是我接下来两个月的工作重心。
    最后，感谢星环公司对我的培养，以及对我劳动成果的认可。   
