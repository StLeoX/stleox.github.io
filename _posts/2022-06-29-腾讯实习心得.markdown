## 概述

> 关于本次实习，最大的体会就是，生活绝不会只是学习，生活的大部分是在与**琐事**打交道的。
>
> 
>
> 所以，除了学习技术外，还要学习**社交与表达**，尤其是 **异性社交** 这一块。

​	不错的导师、不错的同事、喜欢的技术栈、比较锻炼能力的工作。



## 技术选择

​	实际上开发岗和算法岗的区别还是很大的，体现在学历上，明显算法岗有更多AI方向的研究生，而开发岗是本科生也能做（那么研究生来做不会让学历浪费吗？）

> 从技术的角度来看，对计算机系统理解深刻的人固然厉害，但同时会承担更多的杂活、累活。

​	来腾讯实习，从技术的角度来说还是不够好。
​	因为腾讯这边的后端技术太旧了，维护的遗留项目太多了，加上这个leader又是比较老派的、比较复古的技术，甚至于出现了cpp写后端CGI的程序，不接轨于新的技术潮流。
​	但是无可否认的是，这些cpp11的代码确实写的很"工业级"，这是值得学习的一点，但是作为新一代程序员，其主要职责显然不应该是维护遗留项目，所以很期望写go做新项目。不过目前也是在向go rpc微服务这一块转型（但是有理由相信字节在这反面的转型更早一些、更彻底一些）。
​	关于业务方面，组里做的是一个典型的Web平台，但是工期比较赶要在九月前交付。本身我对Web后端就没什么兴趣，尤其是处理各种复杂的、嵌套的结构，以及业务密切相关的增删改查。



## 技术提升

- 一味地**模仿**是不能提升技术水平的。
- 正确的做法应该是：充分**理解需求**和**库功能**后，再去做独立开发，之前存在的项目都只是**辅助设计**。
- 记住，**每一个项目都是独一无二的**。



## 工程师 VS. 程序员

​	"不是所有程序员都是工程师."

​	程序员可能只需要关注程序的**主体可行性**, 工程师还需要考虑:边界情况, 系统稳定性, 系统吞吐量, 时间复杂性 等诸多因素. 换言之, 工程师需要保证交付给客户的程序是经过足够优化的. 



## 公司氛围与企业文化

​	从其他前辈谈论公司安排与人事变化，可以看出依然是“**有人的地方就有江湖**”、“**天下熙熙皆为利来，天下攘攘皆为利往**”、“**薪资才是打工人的第一生存要义**”。

​	但是 Tencent 相较于 Alibaba 还是比较**包容自由**的（来自于过来人的亲身经历，并且“阿里味”这个词确实是火出圈了），但同样也存在一些不合理的现象：加班内卷、抢占成果 等。在进入共产主义社会之前，这些现象都是存在并且会长期存在的。



## 工程化方法

​	几个基本原则: 

- 开闭原则: 对扩展开放, 对修改封闭. 在设计时就应当**有意识地**抽取公共的部分, 以保证后续工作都是在公共部分上扩展. 
- 单一职责原则: 单一模块应当聚焦单一功能, 并考虑各种边界情况. 让一个模块兼顾其他功能只会增加混乱程度. 
- 剃刀原则: 只保留最精简的, 最核心的**要素**, 



## 其他

### 开源实习

​	不知道出于什么原因, 开源实习的玩法这两年突然就火了. 会不会是受GSoC的启发, 毕竟Google玩这个早了好多年; 另一方面, 会不会是疫情引起的线上办公的兴起. Tencent / iscas 等机构都在做. 

​	但是开源实习, 肯定是比不上线下的企业实习活动的. 



### 社交

​	平时同事们谈论的话题往往关于：买房、离职、子女教育 等方面，这属于是我需要面对、但又不是在现阶段面对的问题，所以一些事情听听就好。



### 计算机本科教育

​	在“中国计算机本科教育十分陈旧落后”这一点上，我和二十年前的计算机专业毕业生居然惊人一致地表示赞同。以及“单片机这门课很无聊”、“计算机学生主要靠自学”。

​	当然我相信，现在还处在计算机教育的早期发展阶段，有理由相信它今后能发展得更好。而且目前WHU CS的课程改革已经开始，且已经初具影响力了。



### 编程语言

​	大师（我导师）作为资深的工业级C++程序员，对编程语言的把握还是很精准的、品味还是很好的。

​	对于C++标准的演变与发展，大师的观点如下：1. 太新的特性、太复杂的特性不要出现在工业级代码里面；2. 标准的迭代意味着语言的包容性在增强；3. Go语言可能是C++在工业领域的后继，所以至少掌握这两门语言。

​	大师是强烈的Java反对派，存在以下方面的因素：1. Java是一门古老的语言；2. Java的商业化很严重；3. Java的盛行主要来自于遗留项目的影响力，典型如Apache基金会下的项目。

> 注：你可以排斥Java语言，但你不应该排斥Apache的遗留项目，例如Apache Kafka的广泛应用场景。

​	关于C与C++：C的小巧灵活反倒是其优势，因此适用于某些特殊场景。这么说是因为C具有ABI兼容性，或者说新的语言都会兼容C ABI；而C++不具备如此强大的ABI兼容性，因为C++ ABI是C ABI的超集。



## 警惕技术异化人

​	**虽然公司环境很好，但是感觉不少的“人”已经被** **技术**/**管理**/**效能** 等**这些互联网企业的特性所”异化“了**。总之和我之前接触到的学院老师气质不同，更是和我在老家接触到的贩夫走卒不同。

​	为什么有的人会被技术所异化？可以发现，大多数被异化的人都是学理工科出生，这是因为其**自身的人文素养不够**，受人文教育的程度不同。可以说，这部分人虽然技术能力很牛，做事的完成度很高，但是思想上的复杂性是不够丰富的。

​	终极目的：摆脱被社会单一化、扁平化、甚至是工具化；远离价值认可的单一化；过着思考过的、主观的人生；成为一个完整的、属于自己的人。

> ref：https://www.bilibili.com/video/BV1ad4y1S7ov

