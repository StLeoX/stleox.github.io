> 我决定今后至少两年内，将数据库作为第一研究方向。

## 2022 年，国产数据库元年

> [ref1: zhihu](https://www.zhihu.com/question/530189411/answer/2507987099)

    2022 年，国内产生了很多数据库创业公司，且将传统数据库细分到了更多垂直场景，包括 列存、时序、云原生 等。

    

## 我的数据库之旅

**启蒙**

    最早接触到“数据库”这个概念，应该是在高中学习 base 这个单词的时候。老师说“这个单词除了基础外还可以指基地，比如army base、database”。army base我能理解，就是一堆士兵，那么database就应该是一堆数据。
    但是当时我还分不清楚数据和文件的区别。我知道图片、文档都应该算是数据，那么这些数据（实际上是文件）都是存在操作系统上的，还要数据库做什么？

    

**使用**

    课程设计只用到了MySQL数据库，也只停留在CRUD，甚至SQL都不用写直接用ORM。

    实习期间用 Clickhouse 做 OLAP，属于是后端与数据中台对接部分的工作。因为部分数据不是存在表里面的（比如存在 KV / Redis 上），所以需要先拉到表里面才能进一步分析处理。这实际上就诞生了“数仓”的初步需求，简单说就是**将多源、多模的数据集成**，提供统一操作能力，在上层写写 SQL 就能完成工作。

> 实习期间导师说过，“李奥，要不你以后就做数据库好了”，然后还惋惜到，“要是我当初坚持做数据库，现在肯定XXX”。我知道这些程序员看技术趋势都是很准的，所以我但是把这话听进去了。

    

**研发**

    正式进入数据库研发领域，应该是学习 CMU445 课程之后。

> 我在本科期间探索过的方向：OS -> PL&C -> DB
> 
> 做 OS 的时候觉得太底层，很多时候涉及到硬件相关的优化；做 PL&C 的时候觉得 PL 太过抽象、难得产出落地，Compiler 又有点传统、近几年很难有突破。
> 
> 直到做 DB 才觉得这个方向很合适，既有 Compiler Frontend 类似的优化手段，又是建立在 OS 这个基座上的，此外还可能涉及到 DistributedSystem 的理论，可以说是 CS 最为综合的方向不为过。
> 
> DB 追求的是**更快、更大、更强**，这些指标都可以进行直观的量化，这也是推动 DB 不断改进创新的因素之一。

    

## 我对数据库的思考

    李国良老师在21对数据库发展趋势的[探讨](https://zhuanlan.zhihu.com/p/599885979)很有帮助，认为未来的四个主要发展方向：Scalability，Deployment，Hardware，DataModel。

#### 关于 OLTP

    JOIN 是 Relational Model 中最昂贵的操作，所以有两种核心的优化思路：

- **反规范化关系**，DM 中常见的一张很宽的`事实表`。实际上关系的`规范化`就是用来减少关系中的冗余的（以减少表的大小等），但是为了避免 Join 计算我们避开一些规范化、在原表中保持一定的冗余。

- Data Model 从 Relation 演进为 Graph，能避免大量的 Join 计算。

    

#### 关于 OLAP & DataWarehouse(DW)

    DW 是服务于 DataMining 的，后者属于科研的第四范式，是数据密集型、基于大量数据去发现知识、规律的过程。

    将 OLTP 改造为 OLAP 其实存在大量工作要做。例如，行存适用于TP而列存适用于AP，这只是很小的一个点，而不是两者的本质区别。其他还要考虑：设计适用于AP的WAL、Recovery机制等。

    SIMD 指令本质上是**硬件实现的**向量化执行，向量程序的指令延迟和标量程序是存在本质差异的，所以 Doris 使用了 SIMD 能比软件实现向量化的数据库快若干倍。

    

#### 关于 HTAP

    数据库的未来（或者说“已来”）必然是属于HTAP的。

        

## 重新思考研究方向

**数据库从业心态**

    数据库是 Data Infra 领域的代表性方向。

    注意到，Infra/Business 只是两种不同的工作性质，而非两种工作内容。所以也可以说我偏爱 Infra 性质的工作，喜欢工程而非研究。

    工程师对于技术应该**保持开放包容的心态**，不要给自己设定边界，无论是语言还是其他工具。
    我在过去可能是在关注单机数据库的设计实现，但其实 Shark架构就是一个MPP版的OLAP数据库。只不过基于Java将组件都解耦了，称为 Hive on Spark。这和单机数据库在原理上是相通的，比如 Spark 是基于job执行的，DuckDB 也是基于task执行的，只不过执行环境前者是MPP后者是单机。

    

**数据库市场现状**

    以下是数据库工业界的一些现状（2023）。

1. OLTP 市场基本饱和。
   
   一方面，OLTP 国产化的蛋糕可能已经被 Ob、Guass 等几家分完了。
   
   另一方面，Oracle 数据库的取代进程是非常缓慢的。

2. 分布式 OLTP 是伪需求。
   
   对于大厂而言，完全有能力对开源 OLTP 进行分布式扩展，比如 TDSQL；对于小厂而言，可能上不到这个数据量。此外，还有很多成熟的 Sharding 开源方案。

3. OLAP 市场占比逐渐提升。
   
   OLTP 与 OLAP 是数据库中最为主流的两个方向。既然 OLTP 已无工作可做，那么很多 OLTP 是在逐渐转向 HTAP。

4. 更多细分的数据库正在兴起。
   
   包括做时序数据库的、做图数据库的、做向量数据库的。其中向量数据库应该属于 DB for ML 领域，特性是 ANN 查询。

    

**数据库择业经验**

- 能避开 OLTP 产品就尽量避开，无论它是否宣扬自身特性，尤其是避开“分布式 OLTP”。

- 如果去小厂，要选取有前景的细分领域。

- 如果去大厂，要靠近新产品线，而且要避开那些只会在内部广泛使用的产品。

- 避开生态性的工作，多做本体性的工作。

- 从经验主义的角度讲，哪家公司的融资拿得多就应该去哪家。

> 某位前辈在聊天时说到：
> 
> “对于从业者来说的话，我推荐的是，如果到小公司，就去找那种做细分领域的，当然现在olap也不错，这个领域能卷的东西比较多。如果到大公司的话，到做新品的地方去，然后避开那种只做来内部用的产品。另外一点，比如 Spark UDF 和 Spark Engine 的工作不同，前者是生态性的，是支持和定制化。”

    

**参考大神的选择**

    数据库领域前辈`王润基`先生，现在关注`流式数据库`。他之前做过单机操作系统和分布式存储系统。

    “为什么会转到数据库系统？-- 因为有趣！”确实，操作系统现在能取得的突破太少了，分布式存储也日趋饱和，当然数据库系统与前两者实际上存在交集的。



**下一步瞄准什么**

    目前看来 ML Infra 领域的需求是比较大的，包含有这些方向：分布式机器学习系统、机器学习运行时加速。

    这些方向中，我可以更加关注“存储”，比如数据存储、模型存储。

    

**以下几个方面值得调研**

> [ref](https://zhuanlan.zhihu.com/p/510928249)

    该领域细分哪些方向？

- **向量数据库**。注意到VDB不是指引入向量化执行技术的数据库，而是面向向量数据存储的数据库。

    有哪些专注该领域的研究机构呢？

    有哪些需要该领域人才的公司呢？

- OneFlow：机器学习框架；

- Zilliz：向量数据库；

> （以下内容来自互联网）
> 
> ML infra是指机器学习基础设施，包括用于训练和部署机器学习模型的各种工具、平台和技术。这些基础设施通常包括数据存储和处理、模型开发、训练和推理、模型监控和调整等组件。
> Data infra是指数据基础设施，包括用于管理和处理数据的各种工具、平台和技术。这些基础设施通常包括数据存储和处理、数据仓库、数据挖掘、数据可视化、数据质量管理等组件。数据基础设施是机器学习基础设施的基础，因为机器学习需要大量的高质量数据来训练模型。

    

## 工作内容

    在星环科技，采用典型的数据库系统开发职责划分，分为“存储研发团队”和“执行研发团队”，我所在的是执行研发团队中的 UDF 执行这一块，并且大部分工作目标是**语法兼容**。

    ArgoDB 的产品形态就是离线数仓，定位却是实时 OLAP。这样的工作是落伍的、缺乏创造性的。

    另外，关于“基础软件研发容易做成客服”，确实如此，应付各种 POC 和临时需求是大部分的工作形式，明明应该瀑布式或增量式的软件开发过程，却被做成了敏捷开发过程。
