> 我决定今后至少两年内，将数据库作为第一研究方向。

## 我的数据库之旅

**2022 年，国产数据库元年**

    2022 年，国内产生了很多数据库创业公司，且将传统数据库细分到了更多垂直场景，包括 列存、时序、云原生 等。

    这说明数据库行业的商业化十分成熟。

    

**启蒙**

    最早接触到“数据库”这个概念，应该是在高中学习 base 这个单词的时候。老师说“这个单词除了基础外还可以指基地，比如army base、database”。army base我能理解，就是一堆士兵，那么database就应该是一堆数据。
    但是当时我还分不清楚数据和文件的区别。我知道图片、文档都应该算是数据，那么这些数据（实际上是文件）都是存在操作系统上的，还要数据库做什么？

    

**使用**

    课程设计只用到了MySQL数据库，也只停留在CRUD，甚至SQL都不用写直接用ORM。

    实习期间用 Clickhouse 做 OLAP，属于是后端与数据中台对接部分的工作。因为部分数据不是存在表里面的（比如存在 KV / Redis 上），所以需要先拉到表里面才能进一步分析处理。这实际上就诞生了“数仓”的初步需求，简单说就是**将多源、多模的数据集成**，提供统一操作能力，在上层写写 SQL 就能完成工作。

> 实习期间导师说过，“李奥，要不你以后就做数据库好了”，然后还惋惜到，“要是我当初坚持做数据库，现在肯定XXX”。我知道这些程序员看技术趋势都是很准的，所以我但是把这话听进去了。

    

**研发**

    正式进入数据库研发领域，应该是学习 CMU445 课程之后。

> 我在本科期间探索过的方向：OS -> PL&C -> DB
> 
> 做 OS 的时候觉得太底层，很多时候涉及到硬件相关的优化；做 PL&C 的时候觉得 PL 太过抽象、难得产出落地，Compiler 又有点传统、近几年很难有突破。
> 
> 直到做 DB 才觉得这个方向很合适，既有 Compiler Frontend 类似的优化手段，又是建立在 OS 这个基座上的，此外还可能涉及到 DistributedSystem 的理论，可以说是 CS 最为综合的方向不为过。
> 
> DB 追求的是**更快、更大、更强**，这些指标都可以进行直观的量化，这也是推动 DB 不断改进创新的因素之一。

    

**工业界**

    在星环科技，采用典型的数据库系统开发职责划分，分为“存储研发团队”和“执行研发团队”，我所在的是执行研发团队中的 UDF 执行这一块，并且大部分工作目标是**语法兼容**。

    ArgoDB 的产品形态就是离线数仓，定位却是实时 OLAP。这样的工作是落伍的、缺乏创造性的。

    另外，关于“基础软件研发容易做成客服”，确实如此，应付各种 POC 和临时需求是大部分的工作形式，明明应该瀑布式或增量式的软件开发过程，却被做成了敏捷开发过程。

    

## 我对数据库的思考

    李国良老师在21对数据库发展趋势的[探讨](https://zhuanlan.zhihu.com/p/599885979)很有帮助，认为未来的四个主要发展方向：Scalability，Deployment，Hardware，DataModel。

#### 关于 OLTP

    JOIN 是 Relational Model 中最昂贵的操作，所以有两种核心的优化思路：

- **反规范化关系**，DM 中常见的一张很宽的`事实表`。实际上关系的`规范化`就是用来减少关系中的冗余的（以减少表的大小等），但是为了避免 Join 计算我们避开一些规范化、在原表中保持一定的冗余。

- Data Model 从 Relation 演进为 Graph，能避免大量的 Join 计算。

    

#### 关于 OLAP & DW

    DW 是服务于 DataMining 的，后者属于科研的第四范式，是数据密集型、基于大量数据去发现知识、规律的过程。

    将 OLTP 改造为 OLAP 其实存在大量工作要做。例如，行存适用于TP而列存适用于AP，这只是很小的一个点，而不是两者的本质区别。其他还要考虑：设计适用于AP的WAL、Recovery机制等。

    SIMD 指令本质上是**硬件实现的**向量化执行，向量程序的指令延迟和标量程序是存在本质差异的，所以 Doris 使用了 SIMD 能比软件实现向量化的数据库快若干倍。

    

## 重新思考研究方向

#### 数据库从业心态

    数据库是 Data Infra 领域的代表性方向。

    注意到，Infra/Business 只是两种不同的工作性质，而非两种工作内容。所以也可以说我偏爱 Infra 性质的工作，喜欢工程而非研究。

    工程师对于技术应该**保持开放包容的心态**，不要给自己设定边界，无论是语言还是其他工具。
    我在过去可能是在关注单机数据库的设计实现，但其实 Shark架构就是一个MPP版的OLAP数据库。只不过基于Java将组件都解耦了，称为 Hive on Spark。这和单机数据库在原理上是相通的，比如 Spark 是基于job执行的，DuckDB 也是基于task执行的，只不过执行环境前者是MPP后者是单机。

    

#### 数据库市场现状

    以下是数据库工业界的一些现状（2023）。

1. OLTP 市场基本饱和。
   
   一方面，OLTP 国产化的蛋糕可能已经被 Ob、Guass 等几家分完了。
   
   另一方面，Oracle 数据库的取代进程是非常缓慢的。

2. 分布式 OLTP 是伪需求。
   
   对于大厂而言，完全有能力对开源 OLTP 进行分布式扩展，比如 TDSQL；对于小厂而言，可能上不到这个数据量。此外，还有很多成熟的 Sharding 开源方案。

3. OLAP 市场占比逐渐提升。
   
   OLTP 与 OLAP 是数据库中最为主流的两个方向。既然 OLTP 已无工作可做，那么很多 OLTP 是在逐渐转向 HTAP。

4. 更多细分的数据库正在兴起。
   
   包括做时序数据库的、做图数据库的、做向量数据库的。其中向量数据库应该属于 DB for ML 领域，特性是 ANN 查询。

    

#### 数据库择业经验

- 能避开 OLTP 产品就尽量避开，无论它是否宣扬自身特性，尤其是避开“分布式 OLTP”。

- 如果去小厂，要选取有前景的细分领域。

- 如果去大厂，要靠近新产品线，而且要避开那些只会在内部广泛使用的产品。

- 避开生态性的工作，多做本体性的工作。

- 从经验主义的角度讲，哪家公司的融资拿得多就应该去哪家。

> 某位前辈在聊天时说到：
> 
> “对于从业者来说的话，我推荐的是，如果到小公司，就去找那种做细分领域的，当然现在olap也不错，这个领域能卷的东西比较多。如果到大公司的话，到做新品的地方去，然后避开那种只做来内部用的产品。另外一点，比如 Spark UDF 和 Spark Engine 的工作不同，前者是生态性的，是支持和定制化。”

    

#### 下一步瞄准什么方向

    目前看来 ML Infra 领域的需求是比较大的，包含有这些方向：分布式机器学习系统、机器学习运行时加速。

    这些方向中，我可以更加关注“存储”，比如数据存储、模型存储。

    

**参考大神的选择**

1. 数据库领域前辈`王润基`先生，现在关注`流式数据库`。他之前做过单机操作系统和分布式存储系统。

    “为什么会转到数据库系统？-- 因为有趣！”确实，操作系统现在能取得的突破太少了，分布式存储也日趋饱和，当然数据库系统与前两者实际上存在交集的。

    

**几个值得调研的方向**

- **向量数据库**。注意到VDB不是指引入向量化执行技术的数据库，而是面向向量数据存储的数据库。

    有哪些专注该领域的研究机构呢？

    有哪些需要该领域人才的公司呢？

    Zilliz：向量数据库；

> （以下内容来自互联网）
> 
> ML infra是指机器学习基础设施，包括用于训练和部署机器学习模型的各种工具、平台和技术。这些基础设施通常包括数据存储和处理、模型开发、训练和推理、模型监控和调整等组件。
> Data infra是指数据基础设施，包括用于管理和处理数据的各种工具、平台和技术。这些基础设施通常包括数据存储和处理、数据仓库、数据挖掘、数据可视化、数据质量管理等组件。数据基础设施是机器学习基础设施的基础，因为机器学习需要大量的高质量数据来训练模型。

- **Distributed ML Framework**。﻿为什么在 Spark 之后会再造一个 Ray 计算框架？因为 ray core & object store 不与具体的计算范式相互绑定，而 Spark 只适用于批计算，Flink 只适用于流计算。
- **MLOps**。软件实现的，机器学习云原生系统。
- ML compiling。软硬结合的机器学习系统。
- Hardware accelerator。软硬结合的机器学习系统。

    

## 转型与升级

#### 心态准备

    在数据库系统尤其是 OLAP 领域积累了一些工程经验，大致相当六个月。但是现在有换方向到机器学习系统的想法。

    首先，换赛道并不意味着一切都会推到重来，尤其是作为一个初级程序员，很多工程问题可能是相通的，比如高并低延。

    其次，如果两个系统具有一定的相似性，那么之前的大部分领域知识也是可用的，比如都是数据密集型系统。

    所以**心态上要保持乐观，要有积极探索的勇气**，不要将探索新方向视为一种带来巨大精神压力的活动。

> 放弃了 BreezeML 这个 MLOps 的工作机会。因为 Ops 平台建设这个工作我是不太喜欢的，虽然也是 mlsys 大方向，但是感觉就很接近常规的 Web 后端服务。也就是说 mlsys 其实是有很多细分的，你要想清楚哪些细分是真正吸引人、并且能长期坚持做下去的。

    **上一段沉没成本**：如何评估这段数据库的经验成本呢？

    

#### 动机

**为什么转出 datasys？**

    从业者多、市场饱和，造成行业内卷。**我不喜欢服务于红海市场**。

    datasys 技术发展速度放缓。考虑到数据库领域的特殊性，直接看顶会的创新性有下降。

    技术门槛逐渐降低。

    

**为什么转入 mlsys？**

    首先 mlsys 是结合 ml 的。至于下一步 ml 从业人员会不会转入 mlsys，我认为是存在可能性的。

    实际上，mlsys 从业者也很多，但是 mlsys 的学科细分更加丰富。

    

# 参考

[ref1: 目前国内有众多创业数据库公司，数据库内核去哪家公司](https://www.zhihu.com/question/530189411/answer/2507987099)

[ref: 五年谷歌ML Infra生涯，我学到最重要的3个教训](https://zhuanlan.zhihu.com/p/510928249)



**readings**
## 数据库系统
[BigData魔法盒 - 知乎](https://www.zhihu.com/column/c_1225812232481046528)
[大数据面试&成神之路 - 知乎](https://www.zhihu.com/column/c_1334538640740335616)
[database - 收藏夹 - 知乎](https://www.zhihu.com/collection/606465899)
[分布式存储的七方面问题 - 知乎](https://www.zhihu.com/column/c_1036557865221173248)
[paper学习 - 知乎](https://www.zhihu.com/column/c_1449351860348362752)
[Materialization Strategy · PaperReview](https://baoshengwang.gitbooks.io/paperreview/content/c-store/materialization-strategy.html)
[Database & CMU 15445 - 知乎](https://www.zhihu.com/column/c_1553383727870459904)
[TiDB源码学习笔记 - 知乎](https://www.zhihu.com/column/c_1315587024388947968)
[zhisheng的博客，Tag: Flink](http://www.54tianzhisheng.cn/tags/Flink/)
[Jark's Blog，分类: Flink](http://wuchong.me/categories/Flink/)
[优化器技术论文学习 - 知乎](https://www.zhihu.com/column/c_1364661018229141504)
[数据库home - 知乎](https://www.zhihu.com/column/c_1365244747041275904)
[数据库系统论文阅读笔记 - 知乎](https://www.zhihu.com/column/c_1452728003868946432)
[数据库及存储技术 - 知乎](https://www.zhihu.com/column/c_167095045)
[分布式和存储的那些事 - 知乎](https://www.zhihu.com/column/distributed-storage)
[数据库内核 - 知乎](https://www.zhihu.com/column/c_206071340)
[数据库论文阅读 - 知乎](https://www.zhihu.com/column/c_1391443930878152704)
[数据库前沿技术 - 知乎](https://www.zhihu.com/column/c_190483659)
[DB Paper Reading - 知乎](https://www.zhihu.com/column/c_1440347225616953344)
[数据库经典论文学习-计算引擎 - 知乎](https://www.zhihu.com/column/c_1590335398940659712)
[数据库经典论文学习-优化器&执行器 - 知乎](https://www.zhihu.com/column/c_1590335398940659712)
[IO-meter](https://io-meter.com/)
[谭新宇的博客](https://tanxinyu.work/)
[Papers](https://mwhittaker.github.io/papers/)
[Paper Trail](https://www.the-paper-trail.org/)
[Readings in distributed systems](https://christophermeiklejohn.com/distributed/systems/2013/07/12/readings-in-distributed-systems.html)
[有态度的HBase/Spark/BigData](http://hbasefly.com/)
[公开课笔记 - open-courses](https://zhenghe.gitbook.io/open-courses/)
[TiDB 源码阅读系列文章（一）序 - 知乎](https://zhuanlan.zhihu.com/p/36500508)
[大数据知识分享 - 知乎](https://www.zhihu.com/column/c_1226155932691943424)
[分布式数据库 - 知乎](https://www.zhihu.com/column/c_126076715)
[分布式数据系统小菜 - 知乎](https://zhuanlan.zhihu.com/io-meter)
[MySQL Notes - 知乎](https://www.zhihu.com/column/c_1271447104075182080)
[MySQL内核 - 知乎](https://www.zhihu.com/column/c_1459644399081058304)
[Greenplum的全部内容 - 腾讯云开发者社区-腾讯云](https://cloud.tencent.com/developer/column/72497)
[所有文章 - 叉鸽 MrCroxx 的博客](http://blog.mrcroxx.com/posts/)
[数据系统论文阅读小组 - 知乎](https://www.zhihu.com/column/db-readings)
[数据库系统论文阅读笔记 - 知乎](https://www.zhihu.com/column/c_1452728003868946432)
[数据库开发 - 知乎](https://www.zhihu.com/column/c_145592370)
[openGauss系列文章 - 知乎](https://www.zhihu.com/column/c_1399385679651135489)
[Fu Zhe's Blog，标签: Database](https://fuzhe1989.github.io/tags/Database/)
[酷哥说库 - 知乎](https://www.zhihu.com/column/c_1383470351893024768)
[MySQL内核揭秘 - 知乎](https://www.zhihu.com/column/360infra)
[数据库及存储技术 - 知乎](https://www.zhihu.com/column/c_167095045)
[cassandra专栏 - 知乎](https://www.zhihu.com/column/c_201187146)
[分布式、存储笔记 - 知乎](https://www.zhihu.com/column/c_181108752)
[PostgreSQL - 知乎](https://www.zhihu.com/column/c_1162025279425327104)
[Paper Reading - 知乎](https://www.zhihu.com/column/c_1460006084769046528)
[Databend 内幕大揭秘](https://psiace.github.io/databend-internals/)
[Bruce Momjian: Postgres Administration Presentations](https://momjian.us/main/presentations/administration.html)
[Storage Engine - Database Internals](https://sinsay.github.io/db/part_1_storage_engine.html)

## 分布式系统
[什么才算是真正的编程能力？ - 知乎](https://www.zhihu.com/question/31034164/answer/553533545)
[机器学习系统：设计和实现 — 机器学习系统：设计和实现 1.0.0 documentation](https://openmlsys.github.io/index.html)
[高并发的哲学原理（一）-- 找出单点，进行拆分 - 岁寒](https://lvwenhan.com/tech-epic/499.html)
[凤凰架构](https://icyfenix.cn/[凤凰架构：构建可靠的大型分布式系统)
[Paxos、Raft分布式一致性最佳实践 - 知乎](https://www.zhihu.com/column/paxos)
[Patterns of Distributed Systems](https://martinfowler.com/articles/patterns-of-distributed-systems/)
[fucking-translation/patterns-of-distributed-systems: 《Patterns of Distributed Systems》中文版](https://github.com/fucking-translation/patterns-of-distributed-systems)
[Kongfy's Blog - good good code, day day up!](http://blog.kongfy.com/)
[分布式领域经典论文 - 知乎](https://www.zhihu.com/column/c_1042727519522476032)
[分布式和存储的那些事 - 知乎](https://www.zhihu.com/column/distributed-storage)
[分布式系统 - 知乎](https://www.zhihu.com/column/c_1269187001473196032)
[分布式系统 - 知乎](https://www.zhihu.com/column/distributed-sys)
[分布式系统 - 知乎](https://www.zhihu.com/column/c_1276106093996306432)
[分布式点滴 - 知乎](https://www.zhihu.com/column/learn-distributed-system)
[强力研分布式系统 - 知乎](https://www.zhihu.com/column/c_1278840901029654528)
[用谁都能看懂的方法解释分布式系统, 大概.. - 知乎](https://www.zhihu.com/column/c_158208519)
[分布式系统论文笔记目录 - 知乎](https://zhuanlan.zhihu.com/p/34427903)
[OpenACID Blog](https://blog.openacid.com/)
[Notes - Stephen Holiday](https://stephenholiday.com/notes/)
[Peter Bailis, Peter Bailis: Highly Available, Seldom Consistent](http://www.bailis.org/blog/)
[Notebook of a researcher in distributed systems, Read, Write, Execute](http://hh360.user.srcf.net/blog/)
[donnemartin/system-design-primer: Learn how to design large-scale systems.](https://github.com/donnemartin/system-design-primer)