## 编程技艺

### 心法

**将编程技艺置于社交技艺的对立面？**

    引言：[科技爱好者周刊（第 258 期）：卡马克的猫 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2023/06/weekly-issue-258.html)

    论点：也许"亲人"和"亲代码"就是有点对立。**性格特别和善可亲的人，往往不容易成为优秀程序员。**

    论据：根据在星环公司观察到的情况，似乎确实如此。程序员除了程序本身，其他一切都不那么在乎，往往能创造更有价值的软件。

    

**提升效能的意识**

    程序员在工作中**要有提升效能的动机**，主要方式包括通过自动化提升工作效率。

    提升效能仍然采用**迭代的基本模式**。

**做题家与程序员几乎是对立的思维模式**

    做题家知道，问题的答案是唯一的，所以自己只需要努力找出来“正确答案”即可，目标很明确。

    但是在编程过程中，大到架构设计、小到函数签名的设计，都绝对不是唯一的，我们只是在努力寻找最优解，寻找BugFree的方案。

    这只能是一个不断逼近的过程，所以需要不断地修正目标，甚至会对阶段性的目标完全推倒从来。

    

### 结对编程

**结对是如何提升效能的**

    两个能力相当的程序员，相互审查代码，往往能收获 1+1>2 的效果。

    

### 迭代

    迭代之于编程、之于产品设计、之于解决方案，都是一种基本的方法论。

    只有通过迭代，才能让程序/产品/方案向预期的方向发展。
