> 一直以来，我只是一个不太严肃的开源活动家。
> 
> 从今天起，希望能严肃地对待开源活动，**不灌水、不烂尾**，审慎地对待自己发布的内容。

## 开源写作

### 从 README 做起

> ref：https://zhuanlan.zhihu.com/p/120399648

    我认为以下几点是一份合格的README应有的部分：

1. 简介
   
   - 项目的背景；
   
   - 项目的主要技术栈；

2. 设计概要
   
   - 特性列表；
   
   - 功能列表（可以划分模块）；

3. 使用指导
   
   - GetStart部分：根据“二八定律”，应该让用户在20%的时间内掌握80%的核心内容；
   
   - 偏爱的部署方式；
   
   - 各种环境、参数；

4. 典型用例
   
   - 应用的简短示例；

5. 参考资料
   
   - 同类型项目（如果存在的话）；
   
   - 共享方式；

    

## 技术博客

    有些技术博客有些不好的风气，明明是一个很简单的问题，非要扯一些关联性不大的复杂背景，来显得自己研究问题很透彻。这种文章就不要看，因为实际上这个问题的解决思路是很清晰的。

    

## 开源项目治理

### Code Review

    CR时应当追问以下问题：

- Understand the change, what it's trying to solve, and why?

- How would reviewer implement the solution? Would it be different?

- Can the new code break anything?

- Is the code effective and qualified?

- Are the new functions or methods necessary?

- Are there unit tests?

    CR时也需要采取以下行动：

- Run the code with and without the change/commit.

- Check that all new variables and imports are used.

- Verify refactoring.

- Check if those project documentation need to be modified.

### Code Commit & PR

> [开源贡献方法论](https://www.tisonkun.org/2021/12/05/effective-open-source-participant/)

    用交易的视角去看待 issue & PR，就会发现这就是一个**借贷关系**（borrow - debt），所以贡献开源代码的本质就是积攒  credit，一种市场上广泛认可的技术力。

    

#### 重视与社区的联结

    任何开源项目都是社区驱动的，所以贡献者要重视与社区的联结，在沟通讨论中明确需求、推进开发，避免闭门造车。

    

## 开源项目与商业化

> [ref: 浅谈国内开源软件的投资机会](https://zhuanlan.zhihu.com/p/114857686)
> 
> [ref: 开源、社区与商业](https://zhuanlan.zhihu.com/p/623850781)

### 开源协议

    Apache2 的应用是可以私有部署的，但是需要保留版权标识，也就是说需要向甲方承认我们使用了 DeepFlow 的方案。

    具体而言，Apache2 的主要条件是要求保留原始版权和许可声明，在此基础上使用者可以自由修改、商业使用。

    

# 参考

[AGPL-3.0 开源协议中的“商用”指哪些行为？ - V2EX](https://www.v2ex.com/t/769017)
