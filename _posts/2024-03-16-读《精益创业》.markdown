## 摘录

企业唯有快速顺应时代才能赢得未来，产品生产方式必须因时代而变。

适应互联网化和全球化。

创业的第一阶段是把想法变成产品。

必须用最小的成本、在最短时间里找到最有价值的认知。

尽管想法不错，但因为不知道如何把产品理念转化为成功的企业，我们的失败从第一天起就注定了。

成功并没有伴随着埋头苦干和坚持不懈接踵而至。

> 付出未必有相应的收获，这才是天道。

创业，我们缺乏统一的表述语言来说明这种做法，也没有具体的原则来理解它们。

所谓的新创企业就是在充满不确定性的情况下，以开发新产品和新服务为目的而设立的个人机构。

建立一种可持续的业务。

把点子转化为产品，衡量顾客的反馈。

应该把新创企业的业务及营销视为和工程及产品开发同样重要的职能。

企业的运营当中包含了太多不确定性。

计划和预测只能基于长期的、稳定的运营历史和相对静止的环境。

创业者对于在企业成立伊始就采用传统管理实践非常抗拒。

这些发展单元称为“经证实的认知”，我们会在第三章中谈到。用科学的认知作为衡量标准，我们可以发现并消除令创业者苦恼的浪费根源所在。

需要增长引擎。

> 对于初创企业，活下来是最重要的，活下来所需要的就是“增长”。

每一个新款产品、每一项新特征和每一例市场方案，都是改善这个增长引擎的一次尝试。

太多关于创业的商业计划看上去更像是火箭发射，而不是汽车驾驶。

> 前者缺少动态规划的能力。

可以通过转动方向盘进行不断调整，我们把这个过程称为“开发—测量—认知”的反馈循环（ Build - Measure - Learn ，构建—测量—学习循环），这是全书主题之一。

> 实践方法包括 AB试验，仍然是属于“想-做-学-复盘”框架的。

“转型”关键时刻，或者，我们是否应该“坚持”。

马克所缺的是一种流程，把创新的原始材料转变为真实世界里的突破性成就。

在一个成熟组织中进行运作的创业企业家有时被称为“企业内部的创业者”，因为他们面临着在大企业中创建新部门的特殊情况。

> 腾讯就是典型的“大公司，小部门”。

创企业是一个由人组成的机构，在极端不确定的情况下，开发新产品或新服务。

各种各样的创新：崭新的科学发现，重新开发现有技术的新用途，发展新的业务模式、释放潜在价值，抑或仅仅是把产品或服务带到新的市场，或带给以往服务力度不够的顾客。凡此种种，创新都是企业成功的核心所在。

“学习”二字是书本里用以掩饰执行失败的惯用借口。

学习是苍白无力的说辞。你无法把学习拿去银行，你没法用它投资或消费，你不能把它给予顾客或回报合伙人。

我们必须认清自己是否朝着可持续企业之路发展成长。

因此我们牙一咬心一横，作好道歉的思想准备，面向公众推出了产品。

早期使用者会用自己的想象来填补产品的不足部分。他们偏好这种情境，因为他们在意的是成为。

因此，任何超出早期使用者需要的额外功能或修饰，都是资源和时间上的浪费。

根据最小化可行产品的复杂程度，它可以从一次极简单的“冒烟测试”（其作用比广告多不了多少），到一个存在问题、缺失某些功能的早期产品原型。

大多数创业者处理这种问题的方式是先开发产品，然后再来验看顾客对产品的反应。我认为这种方式会导致许多浪费，因此已经落伍了。

他的挑战在于，根本不可能以原型产品形式来展示一个运行的软件。实际产品需要克服重大的技术障碍，并且产品中的在线服务部分也需要做到高度可靠和有效。为了规避风险，以免开发多年之后才恍悟产品没人想要，休斯顿使的一招出乎意料的简单：他拍了一段视频。

不管怎么说，他们遇到的许多人都不是早期使用者，而且也不太会接受一项看不见摸不着的新服务。不过还好，最终还是有人点头了。这位早期使用者受到了贵宾式的待遇。

然而从精益创业的角度来看，他们的进展意义非凡。每过一周他们都越来越了解如何让产品成功。几周以后，他们已经准备好接待下一位顾客了。

事实上，贵宾式最小化可行产品的常见结果是证明公司原本设定的增长模式无效，由此清楚表明采用其他方式的必要性。

当我们选择Aardvark时，用真人替代后台那部分的工作共持续了9个月。我们雇了8个人来应对问询，把对话分类等等。基于真人和人工智能之间的障碍可以逾越的假设，以及表明顾客对我们开发的东西有兴趣的证据，我们在系统自动化之前就筹得了种子期投资和成长期投资。

相反，他们使用了“即时反应的测试向导”（Wizard of Oz testing）进行模拟。在这种测试法中，顾客相信他们是和真正的产品互动，但在后台工作的其实是真人。

即便是“低质量”的最小化可行产品也能为开发高质量的产品服务。确实，有时顾客认为该最小化可行产品是低质量的。如果是这样，我们应该视其为一个机遇，去了解顾客在意的是什么品质。这绝对比凭空想象或纸上谈兵好得多，它为开发未来的产品提供了坚实的实证基础。

因此，精益创业模式和开发高质量的产品并不矛盾，但它只以赢得顾客为目的。我们必须愿意把传统的专业标准搁置一边，尽快进入“经证实的认知”环节。

无论最小化可行产品的测试结果如何，都不放弃希望。成功的创业者既不会一看到麻烦冒头就退避三舍，也不会一条道走到黑。他们兼有坚持不懈和灵活应变的特质。

我们需要一个有条不紊的、系统的方法，来确定我们是否取得了进展、有没有真正获得经证实的认知。我把这套替代传统的核算方式的系统称为创新核算，专门用于新创企业。

新创企业在一开始差不多就是一个纸上的模型而已。商业计划内的财务考量包括了：预测企业期望吸引的顾客数量，要花多少钱，以及将产生多少收入和利润。在新创企业的早期，这只是一个理想，离实际相去甚远。

一家新创企业的工作是：（1）严格测量企业目前的状况，正视评估中揭示的现实真相。（2）设计实验，从而了解如何让真实数据向商业计划中的理想目标靠得再近些。

不幸的是，标准的核算形式对评估创业者没有帮助。新创企业太难以预料，无法精确地作出预测和确立阶段性目标。

大多数产品阶段性目标的设立方法都差不多：可能是和一些顾客交谈，再看看收入数字是否上升，就算完成某个里程碑了。但这并不是衡量新创企业是否取得进步的好指标。我们怎么知道作出的改变和我们追求的目标有关？

创新核算分三步走：
第一，使用最小化可行产品确定企业目前所处阶段的真实数据。
第二，新创企业必须尝试把增长引擎从基准线逐步调至理想状态，这期间可能要经过多次尝试。
这就是第三步：转型还是坚持？

在开发原型产品前，公司可以使用其营销材料先进行一次冒烟实验。这是直接营销中早有的一个技巧，即让顾客有机会预订一个尚未开发出来的产品。冒烟实验仅测量一件事：顾客是否有兴趣试用产品。

工程师、设计师和市场营销人员都擅长优化工作。比如，直营者非常了解如何对价值主张进行对比测试，他们为两组相似的顾客群提供不同的产品服务，再测量这两组人的不同反应率。

客户对产品功能的要求令公司的销售团队和业务领导应接不暇。每个新发现变成了一个非要马上解决的紧急事件。

成功来自公司过去的决定，而现在从事的任何活动都没有产生效应。但是，由于总指标“增长势头良好”，所以这些问题都被掩盖了。

这个系统之所以称为敏捷开发是有充分道理的：使用它的团队能迅速改变方向，轻装上阵，并且快速响应产品负责人的业务改变需要。这个负责人就是安排故事优先顺序的流程经理

> 精益创业、敏捷开发，这些方法都是一脉相承的。

法布德和他的团队没有意识到，Grockit的进展是用虚荣指数衡量的：即所谓的顾客总数和回答问题总数。这是造成他的团队原地踏步、浪费时间的原因。那些衡量指标让团队感到自己好像在进步，但实际上却没有取得什么进展。

对比测试还有助于团队更细致地理解顾客想要什么，不要什么。比如，开发团队希望社交沟通工具能提升产品价值，因此不断添加新的方法，让顾客能相互交流。

新的系统规则中，用户故事在带来经证实的认知之前就不算完整。用户故事会按四种开发阶段归类：尚在产品列表中、正在开发、完成（技术角度上的功能完成），以及处于验证的过程中。

Grockit的这些案例分别说明了三个“可”的衡量指标，即：可执行、可使用和可审查指标。

一个产品成绩报告要可执行的话，必须清楚地显示因果关系。否则就是虚荣指标。Grockit用来判定认知阶段性目标的报告，非常清楚地说明了要得到结果，必须采取什么行动。

第一，把产品报告做得尽量简单，让每个人都能理解。记住“人也是衡量指标”的说法。让报告易懂的最简单办法是使用明确具体的单位。

第二，在产品报告的创建中，必须确保生成报告的机制不会太复杂。只要有可能，就应该直接从总数据中得出报告，而不是通过中介的系统，

每个创业者在开发一种成功产品的过程中，迟早会面临一项重大挑战：即决定何时转型，何时坚持。

一种错误观念认为，必须采用严格的方式决定是转型还是坚持。这种想法是不对的。从创业实践中排除愿景、直觉、判断这些人为的因素并不可取，我们也无法那么做。

在硅谷企业中，我们把这种境况称为“进退维谷”，用来形容企业有了一点成绩，但仅仅只够生存下去，却无法实现其创始人和投资人的期望。这样的企业是消耗人们精力的无底洞。

戴维决定要做的转型，我称之为“放大式转型”，即重新聚焦在以前产品的一项功能上，把其放大为一个整体。想一想以上的顾客评语：顾客喜欢这个概念，喜欢选民登记的技术，但是在产品的社交网络功能上，他们无法实现价值。

@2gov依靠的不是留住用户的业务方式（即“黏着式”的增长模式），而更偏向交易性质。戴维的假设是：热情的活跃者愿意付费，让@2gov代表关心自身事务的选民协助进行联络工作。

戴维实现这个成绩不是因为更努力地工作，而是更明智地工作，把原产品的开发资源用到新产品中。对比以往4个月的优化工作，最近这4个月的转型努力产生了极高的投资回报

创业老手常常会谈论他的企业还剩下多少跑道，其实指的就是新创企业要么起飞、要么失败的剩余时间。

真正衡量跑道长短的标准是公司剩余的转型次数，即根本改变商业战略的机会还有几次。从转型的角度而非时间来衡量跑道，提供了加长跑道的另一种方法：即加速每次转型。

事前安排好相关会议是减轻压力的方法之一。我建议每个新创企业都应该有一个讨论“转型还是坚持”的常规会议。以我的经验，每次会议之间只隔几周的话太频繁，超过几个月又嫌太少。不管怎么说，每个企业都要找准自己的节奏。

这时我们需要的转型称为顾客细分市场转型。在这类转型中，公司认识到开发的产品可以解决真实顾客的真实问题，但此顾客非彼顾客，他们不是公司原来计划服务的目标。换言之，产品的前提假设只得到了部分确认。

一旦我们认识到错误并开始转型时，以往的技巧仍然适用。我们创立了一个用于实验的沙盒方案。

这时候，公司会发现运用一种截然不同的技术，也可以获得相同的解决方案。技术转型在成熟的企业业务中更加常见。

现代企业必须善于同时推进多项工作。要做到这些，我们将会探讨在一个成熟企业的大环境中培育创新团队的技巧。

丰田发现小批量让他们的工厂效率更高。相比之下，精益创业的目的并非高效开发更多产品，而是尽可能迅速地学会如何创建一项可持续的业务。

大批量生产仍是产品开发设计中的行规。新产品开发的工作在一个虚拟的流水线上推进。产品经理要去了解哪些功能特性可以取悦顾客，接着产品设计师要决定这些功能特性的界面应该如何。这些设计再传达给工程开发人员，开发新产品或改善现有产品。

并不是所有的已有产品都能改成小批量设计，但这不是固守老方式的借口。要让创新者能够用小批量方式实验，需要铺垫大量的支持工作。

精益生产使用“拉动”策略解决缺货问题。

可持续增长的特征体现在一条简明规则中：新顾客是由以往顾客的行动带来的。以往顾客推动可持续增长的方式主要有四种。

使用黏着式增长引擎的公司要非常仔细地追踪顾客损耗率，亦称流失率。所谓流失率就是指在任意一段时间内，没有继续使用公司产品的那部分顾客占顾客总数的比率。

社交网络和特百惠（Tupperware）都是由顾客推动大部分行销工作的产品实例。产品认知度在人群中快速传播，就像病毒散播传染病一样。

毒式引擎和其他增长引擎一样，由量化的反馈循环提供动力。这种循环称做“病毒循环”，其速度取决于“病毒系数”。

比如高级零售店面有更多的客流，因此更有价值。同样，针对较富裕的顾客做广告，通常比面向大众的广告成本要高。

对很多创业者而言，因为“我们的新创企业没能达到产品/市场契合”，便意味着转型是一场失败的活动。我认为，这并不是安德森在他的定义中想要包含的意思。而反过来说，一旦我们的产品达成了产品/市场契合，我们就不需要再转型了，这样的假设也是错的。

一家新创企业在调整引擎的过程中，使用创新核算评估每次开发—测量—认知的反馈循环，可以衡量自己是否向着产品/市场契合靠拢。

一旦我们有了一个能在早期使用者中增长的产品，理论上就可以完全停止产品开发工作了。这个产品会继续增长，直至在早期市场中达到极限。接着增长就会呈现平稳状态，甚至完全停止。

我知道随着企业成长，规模不断扩大，我们需要更多的流程和系统来协调公司运作。但我也看到很多新创企业错误地追求“专业化”，变得僵化和官僚。

在这个话题上，我听到的大多数建议是一种折中方案，就是“做一点点计划，但不要做得太多”。

等折中方案出来，你得到的结果可能会和你一开始真正想要的周期长短比较接近。不过这样的角力会逐步升级。过了一段时间，人人都会采取尽量极端的定位，这使作出折中决定变得更困难、成功机会更渺茫。

每个新晋工程师都会被指定一位导师，帮他全面了解IMVU的系统、概念和技术，完成一整套课程，早日上手工作。导师和学徒的绩效表现是相连的，因此导师会认真地指导教育。

> 建立自适应的、自治的组织，开源社区就是自治的，很主要的一种方式是导师制。

“为了不停止生产而停止生产”，是丰田悖论格言的缩影。“安灯”拉绳的要义是一旦发现无法纠正的质量问题冒头，马上停止工作，强制展开问题调查。这是精益生产中最重要的发现之一：不能为了时间牺牲质量。

> 看起来有点像是这种管理逻辑，即用周五的时间来对项目重构。

一方面，经证实的认识和最小化可行产品的逻辑是，我们必须尽早把产品送至顾客手中，除了需要从顾客那里学习的认知外，其他任何工作都是浪费。

为了加速增长，精益创业需要一种流程，提供一个自然的反馈循环。一旦你推进过快就会造成很多问题。自适应流程迫使你放慢速度，设法防止那些眼下正在浪费时间的问题。当这些防御性努力收效之时，你自然会再次加速。

像这样反复询问五次“为什么”，可以帮你找到问题的根本原因并加以改正。如果这个过程进行得不彻底，我们可能简单地换一根保险丝或一根油泵轴了事。

使用“五个为什么”分析创建自适应组织的方法是：按问题的五个等级，不断向每一级按比例投入解决方案。换言之，当症状较轻时，投入得少些，而症状较重时，则要多投入。

“五个为什么”的方法可以用做天然的速度调节器。你的问题越多，对解决方案的投入也越多。当基础体系或流程投资收到效果的时候，危险的严重程度和数量就会降低，团队又能重新加速。

尽管面对错误时，人会本能地认为问题出在他人的部门、认知或个性中，“五个为什么”的目标就是要帮我们看到事情的客观真相，认识到一些固有问题不是因人们无能，而是由糟糕的流程引起的，从而做出相应的补救措施。

> 以结果为导向，真正目的只有一个就是把事情办好。

虽然这个会议有一大群人参与，但却必不可少。我的经验是，没有参加会议的人最终会变成承担罪状的靶子。不管这个替罪羊是一位初级员工还是首席执行官，造成的破坏力是同等的。

我让团队采用这样两条简单的原则：1．对第一次错误要容忍。2．不允许同样的错误发生两次。

GN曾经试图解决所有浪费多年时间的“历史包袱”问题。但由于这类问题过于复杂，要迅速找到解决方案太难了。IGN踌躇满志地展开“五个为什么”讨论，但忽视了三件重要事情

“五个为什么”表面上看起来是关于技术问题和防止错误发生，但是，随着团队成员排除了这些表面上的浪费，他们对如何一起工作产生了新的理解。

这是软件开发团队多年来使用的标准“瀑布模型”开发方法。它是一种线性的、大批量系统，它的成功仰赖恰如其分的预测和计划。换言之，它完全不适应现今快速改变的商业环境。

1．较小的团队。把角色相同的成员组成的大团队，改编成角色不同的员工组成的较小团队，从而确保每个成员全身心地投入。2．实现较短的开发周期。3．更及时的顾客反馈，以测试产品软件是否危及他们的电脑，以及新功能的表现和客户体验如何。4．激励团队作出迅速、大胆的决定。

精益创业企业在成长中，可以使用自适应技巧来建立更复杂的流程，而无须放弃他们的核心优势：即完成开发—测量—认知反馈循环的速度。

培养颠覆式创新，颠覆式创新与创造性破坏

在我的经验中，不管是新创企业还是企业内部的新创团队，都要具备三种架构特征：稀少但稳定的资源，开发业务的独立权，以及与绩效挂钩的个人利益。

传统开发过程中部门间的层层传递和审批延长了开发—测量—认知的反馈循环，妨碍了团队学习和个人责任制的落实。而新创企业则需要随时保持绝对“最小化”的状态。

新创企业则不同：预算太多和预算太少一样有害，无数互联网公司的失败都能证明这一点。而且新创企业对中途的预算改变非常敏感。

创新的关键在于坚持不懈。公司如果没有能力用更敏捷的方式展开实验，最后难免陷于《创新者的窘境》一书中所描述的命运：尽管利润一年年增长，但某天业务却突然垮台。

他们没有建立起一个用于运作和创新的支持体系。我相信这是解释为什么像IBM这样的公司在使用黑匣子方式开发的新市场中（比如个人电脑业务）丧失领导地位的原因之一：他们从一开始就无法重建并延续一种能形成创新的文化。

我建议的解决方案是为创新建立一个沙盒系统，它能控制创新的冲击力，但不会限制创新团队使用的方式。
